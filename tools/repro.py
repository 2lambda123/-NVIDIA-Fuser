  norm_const = fd.define_scalar(input_shape[1])
  mean = fd.ops.broadcast_in_dim(mean, output_shape=input_shape, broadcast_dims=[0])
  x_sub_mean = fd.ops.sub(x, mean)
  rstd = fd.ops.broadcast_in_dim(rstd, output_shape=input_shape, broadcast_dims=[0])  
  x_hat = fd.ops.mul(x_sub_mean, rstd)

  bcast_weights = fd.ops.broadcast_in_dim(weights, output_shape=input_shape, broadcast_dims=[1])
  grad_x_hat = fd.ops.mul(z, bcast_weights)
  a = fd.ops.mul(norm_const, grad_x_hat)
  b = fd.ops.sum(grad_x_hat, axes=[1], keepdim=False, dtype=DataType.Null)
  bcast_b = fd.ops.broadcast_in_dim(b, output_shape=input_shape, broadcast_dims=[0])
  c1 = fd.ops.mul(grad_x_hat, x_hat)
  c2 = fd.ops.sum(c1, axes=[1], keepdim=False, dtype=DataType.Null)
  bcast_c2 = fd.ops.broadcast_in_dim(c2, output_shape=input_shape, broadcast_dims=[0])
  c3 = fd.ops.mul(x_hat, bcast_c2)
  a_sub_bcast_b = fd.ops.sub(a, bcast_b)
  inner = fd.ops.sub(a_sub_bcast_b, c3)
  reciprocal = fd.ops.reciprocal(norm_const)
  reci_rstd = fd.ops.mul(reciprocal, rstd)
  dx = fd.ops.mul(reci_rstd, inner)
  z_x_hat = fd.ops.mul(z, x_hat)
  dw = fd.ops.sum(z_x_hat, axes=[0], keepdim=False, dtype=DataType.Null)
  db = fd.ops.sum(z, axes=[0], keepdim=False, dtype=DataType.Null)
